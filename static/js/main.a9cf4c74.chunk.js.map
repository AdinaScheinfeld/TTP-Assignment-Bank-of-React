{"version":3,"sources":["components/Home.js","components/LogIn.js","components/UserProfile.js","components/Debits.js","components/Credits.js","components/CDCard.js","components/AccountBalance.js","components/UserNav.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","Component","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","props","mockLogIn","redirect","userName","password","this","id","onSubmit","htmlFor","type","onChange","UserProfile","memberSince","Debits","getDebitDescription","event","newDebitDescription","getDebitCost","newDebitCost","addDebit","newDate","Date","toLocaleString","debitObj","amount","Number","description","date","updateDebits","accountBalance","toFixed","placeholder","currentDebits","map","item","index","Credits","getCreditDescription","newCreditDescription","getCreditCost","newCreditCost","addCredit","creditObj","updateCredits","currentCredits","CDCard","UserNav","App","componentDidMount","getDebits","getCredits","logInInfo","newUser","currentUser","axios","get","then","response","debits","data","catch","err","console","log","credits","newDebit","arr","unshift","newCredit","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9cf4c74.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { AccountBalance } from './index';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n\n    // render Home component\n    render() { \n        return ( \n            <div className='home'>\n                <div className='navBar'>\n                    <Link to='/' className='link'>Home</Link>\n                    <Link to='/logIn' className='link'>Log In</Link>\n                </div>\n                <h1>Welcome to the Bank of React</h1>\n                <h3>Please log in using the link in the navigation bar above</h3>\n            </div>\n         );\n    }\n}\n \nexport default Home;","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './LogIn.css'\n\nclass LogIn extends Component {\n\n    // constructor\n    constructor() {\n        super();\n        this.state = {\n            user: {\n                userName: '',\n                password: ''\n            },\n            redirect: false\n        }\n    }\n\n    // method to handle change to username input field\n    handleChange = (e) => {\n        const updatedUser = { ...this.state.user };\n        const inputField = e.target.name;\n        const inputValue = e.target.value;\n        updatedUser[inputField] = inputValue;\n\n        this.setState({ user: updatedUser });\n    }\n\n    // method to handle submission of the Log In form\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.mockLogIn(this.state.user);\n        this.setState({ redirect: true});\n    }\n\n    // render LogIn component\n    render() { \n\n        if(this.state.redirect) {\n            return (<Redirect to='/userProfile' />)\n        }\n\n        return ( \n\n            <div className='container'>\n                <div className='navBar'>\n                    <Link to='/' className='link' id='home'>Home</Link>\n                    <Link to='/logIn' className='link'>Log In</Link>\n                </div>\n\n                <form onSubmit={ this.handleSubmit }>\n                    <div className='field'>\n                        <label htmlFor='userName'>Username: </label>\n                        <input type='text' name='userName' onChange={ this.handleChange } value={ this.state.user.userName} />\n                    </div>\n                    <div className='field'>\n                        <label htmlFor='password'>Password: </label>\n                        <input type='password' name='password' />\n                    </div>\n                    <button>Log In</button>\n                </form>\n            </div>\n         );\n    }\n}\n \nexport default LogIn;","import React, { Component } from 'react';\nimport { UserNav } from './index';\nimport './UserProfile.css';\n\nclass UserProfile extends Component {\n\n    // render UserProfile component\n    render() { \n        return ( \n            <div className='container'>\n                <UserNav />\n                <div className='userContainer'>\n                    <div className='profile'>\n                        <h1>User Profile</h1>\n                        <h2>Username: { this.props.userName }</h2>\n                        <h2>Member Since: {this.props.memberSince }</h2>                \n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default UserProfile;","import React, { Component } from 'react';\nimport { UserNav } from './index';\nimport { CDCard } from './index';\nimport './CD.css';\n\nclass Debits extends Component {\n\n    // constructor\n    constructor(props) {\n        super(props);\n        this.state = {\n            newDebitDescription: '',\n            newDebitCost: 0\n        }\n    }\n\n    // method to get a description of a new debit\n    getDebitDescription = event => {\n        this.setState({ newDebitDescription: event.target.value });\n    }\n\n    // method to get the cost of a new debit\n    getDebitCost = event => {\n        this.setState({ newDebitCost: event.target.value });\n    }\n\n    // method to add a debit\n    addDebit = (event) => {\n        let newDate = new Date().toLocaleString();\n        event.preventDefault();\n        let debitObj = {\n            amount: Number(this.state.newDebitCost),\n            description: this.state.newDebitDescription,\n            date: newDate\n        };\n        this.props.updateDebits(debitObj);\n    }\n\n    // render Debits component\n    render() { \n        return ( \n            <div className='container'>\n                <UserNav />\n                <div className='mainContainer'>\n                    <h1>Debits</h1>  \n                    <h2>Balance: { this.props.accountBalance.toFixed(2) }</h2>\n\n                    <div className='add'>\n                        <form onSubmit={ this.addDebit }>\n                            <p>Add a new debit: </p>\n                            <label>Description: </label>\n                            <input \n                                type='text' \n                                name='description' \n                                placeholder='e.g. Tuition' \n                                onChange={ this.getDebitDescription } \n                                value={ this.state.newDebitDescription }\n                            />\n                            <label>Amount: </label>\n                            <input \n                                type='text' \n                                name='amount' \n                                placeholder='e.g. 3000' \n                                onChange={ this.getDebitCost } \n                                value={ this.newDebitCost }\n                            />\n                            <button>Add Debit</button>                \n                        </form>\n                    </div>\n\n                    <div className='debitCards'>\n                        { this.props.currentDebits.map((item, index) => (\n                        <CDCard \n                            key={ index } \n                            description={ item.description } \n                            amount={ item.amount } \n                            date={ new Date(item.date).toLocaleString() } \n                        />\n                    ))}                 \n                    </div>\n                </div>\n            </div>\n\n\n         );\n    }\n}\n \nexport default Debits;","import React, { Component } from 'react';\nimport { UserNav } from './index';\nimport { CDCard } from './index';\nimport './Home.css'\nimport './CD.css';\n\nclass Credits extends Component {\n\n    // constructor\n    constructor(props) {\n        super(props);\n        this.state = {\n            newCreditDescription: '',\n            newCreditCost: 0\n        }\n    }\n\n    // method to get a description of a new credit\n    getCreditDescription = event => {\n        this.setState({ newCreditDescription: event.target.value });\n    }\n\n    // method to get the cost of a new credit\n    getCreditCost = event => {\n        this.setState({ newCreditCost: event.target.value });\n    }\n\n    // method to add a credit \n    addCredit = (event) => {\n        let newDate = new Date().toLocaleString();\n        event.preventDefault();\n        let creditObj = {\n            amount: Number(this.state.newCreditCost),\n            description: this.state.newCreditDescription,\n            date: newDate\n        };\n        this.props.updateCredits(creditObj);\n    }\n\n    // render Credits component\n    render() { \n        return ( \n            <div className='container'>\n                <UserNav />\n                <h1>Credits</h1>\n                <h2>Balance: { this.props.accountBalance.toFixed(2) }</h2>\n\n                <div className='add'>\n                    <form onSubmit={ this.addCredit }>\n                        <p>Add new credit: </p>\n                        <label>Description: </label>\n                        <input\n                            type='text'\n                            name='description'\n                            placeholder='e.g. birthday gift'\n                            onChange={ this.getCreditDescription}\n                            value={ this.state.newCreditDescription }\n                        />\n                        <label>Amount: </label>\n                        <input\n                            type='text' \n                            name='amount'\n                            placeholder='e.g. 100'\n                            onChange={ this.getCreditCost }\n                            value={ this.newCreditCost }\n                        />\n                        <button>Add Credit</button>\n                    </form>\n                </div>\n\n                <div className='creditCards'>\n                    { this.props.currentCredits.map((item, index) => (\n                        <CDCard\n                            key={ index }\n                            description={ item.description }\n                            amount={ item.amount }\n                            date={ new Date(item.date).toLocaleString() }\n                        />\n                    ))}\n                </div>\n            </div>\n\n         );\n    }\n}\n \nexport default Credits;","import React from 'react';\nimport './CDCard.css';\n\nconst CDCard = ( props ) => {\n    return ( \n        <div className='container'>\n            <div className='card'>\n                Description: { props.description} <br />\n                Amount: { props.amount } <br />\n                Date: { props.date } <br />\n            </div>\n        </div>\n     );\n}\n \nexport default CDCard;","import React, { Component } from 'react';\n\nclass AccountBalance extends Component {\n\n    // render AccountBalance component\n    render() { \n        return ( \n            <div>\n                Balance: { this.props.accountBalance }\n            </div>\n         );\n    }\n}\n \nexport default AccountBalance;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './UserNav.css';\n\nclass UserNav extends Component {\n    render() { \n        return ( \n            <div className='navBar'>\n            <Link to='/userProfile' className='link' id='one'>Profile</Link>\n            <Link to='/debits' className='link'>Debits</Link>\n            <Link to='credits' className='link'>Credits</Link>\n            <Link to='/' className='link'>Sign Out</Link>\n        </div>\n         );\n    }\n}\n \nexport default UserNav;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Home, LogIn, UserProfile, Debits, Credits} from './components/index';\n\nclass App extends Component {\n\n  // constructor\n  constructor(){\n    super();\n\n    this.state = {\n      accountBalance: 14568.27,\n      currentUser: {\n        userName: 'bob_loblaw',\n        memberSince: '08/23/99'\n      },\n      debits: [],\n      credits: []\n    }\n  }\n\n  // method to execute when component mounts\n  componentDidMount = () => {\n    this.getDebits();\n    this.getCredits();\n  }\n\n  // method to process a mock login\n  mockLogIn = (logInInfo) => {\n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({ currentUser: newUser });\n  }\n\n  // method to get debits from api\n  getDebits = () => {\n    axios.get('https://moj-api.herokuapp.com/debits')\n    .then(response => {\n      this.setState({ debits: response.data});\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  // method to get credits from api\n  getCredits = () => {\n    axios.get('https://moj-api.herokuapp.com/credits')\n    .then(response => {\n      this.setState({ credits: response.data});\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  // method to update debits with new debit from Debits component\n  updateDebits = (newDebit) => {\n    let arr=this.state.debits;\n    arr.unshift(newDebit);\n\n    this.setState({ \n      debits: arr,\n      accountBalance: this.state.accountBalance-newDebit.amount\n    });\n  }\n\n  // method to update credits with new credit from Credits component\n  updateCredits = (newCredit) => {\n    let arr=this.state.credits;\n    arr.unshift(newCredit);\n\n    this.setState({\n      credits: arr,\n      accountBalance: this.state.accountBalance+newCredit.amount\n    });\n  }\n\n  // render App component\n  render() { \n\n    // create a reference to a Home component\n    const HomeComponent = () => ( <Home accountBalance={ this.state.accountBalance } /> );\n    \n    // create a reference to a UserProfile component\n    const UserProfileComponent = () => (\n      <UserProfile \n        userName={ this.state.currentUser.userName } \n        memberSince={ this.state.currentUser.memberSince } \n      />\n    );\n\n    // create a reference to a LogIn component\n    const LogInComponent = () => ( \n      <LogIn \n        user={ this.state.currentUser } \n        mockLogIn={ this.mockLogIn } \n        {...this.props} \n      />\n    );\n\n    // create a reference to a Debits component\n    const DebitsComponent = () => ( \n      <Debits \n        accountBalance={ this.state.accountBalance } \n        currentDebits={ this.state.debits }\n        updateDebits={ this.updateDebits }\n      /> \n    );\n\n    // create a reference to a Credits component\n    const CreditsComponent = () => (\n      <Credits\n        accountBalance={ this.state.accountBalance }\n        currentCredits={ this.state.credits }\n        updateCredits={ this.updateCredits }\n      />\n    );\n\n    return ( \n      <Router>\n        <Switch>\n          <Route exact path='/' render={ HomeComponent } />\n          <Route exact path='/userProfile' render={ UserProfileComponent } />\n          <Route exact path='/logIn' render={ LogInComponent } />\n          <Route exact path='/debits' render={ DebitsComponent } />\n          <Route exact path='/credits' render={ CreditsComponent } />\n        </Switch>\n      </Router>\n     );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}